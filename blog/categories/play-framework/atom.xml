<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Play Framework | My Development Blog]]></title>
  <link href="http://kirang89.github.com/blog/categories/play-framework/atom.xml" rel="self"/>
  <link href="http://kirang89.github.com/"/>
  <updated>2012-10-03T02:28:24+05:30</updated>
  <id>http://kirang89.github.com/</id>
  <author>
    <name><![CDATA[Kiran Gangadharan]]></name>
    <email><![CDATA[kiran.daredevil@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dwonloading a CSV file in Play!]]></title>
    <link href="http://kirang89.github.com/blog/2012/10/03/dwonloading-a-csv-file-in-play/"/>
    <updated>2012-10-03T02:12:00+05:30</updated>
    <id>http://kirang89.github.com/blog/2012/10/03/dwonloading-a-csv-file-in-play</id>
    <content type="html"><![CDATA[<p>In this post, I'll share a simple way to download CSV files in Play Framework. This is especially useful, if you want to export out some reports or analytics data for offline use. So let’s get started.</p>

<ol>
<li>First create a new Play! application (I’m skipping these minor things for the sake of sticking to the point)</li>
<li>Have a seperate controller/method which handles the generation of CSV files.</li>
<li>In that controller add the following code:</li>
</ol>


<p>``` java CSV download snippet</p>

<p>response.contentType = "text/csv";</p>

<p>response.setHeader("Content-Disposition", "attachment;filename="" + <File Name> +".csv" + """);</p>

<p>response.writeChunk(<header>);</p>

<p>response.writeChunk("\n");</p>

<p>response.writeChunk(<content>);</p>

<p>```
4. Remember to separate your content with a “,” so that it will be columnised in the file</p>
]]></content>
  </entry>
  
</feed>
